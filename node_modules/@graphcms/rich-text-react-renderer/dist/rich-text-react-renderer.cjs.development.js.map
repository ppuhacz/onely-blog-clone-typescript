{"version":3,"file":"rich-text-react-renderer.cjs.development.js","sources":["../src/elements/Audio.tsx","../src/elements/IFrame.tsx","../src/elements/Image.tsx","../src/elements/Video.tsx","../src/elements/Class.tsx","../src/elements/Link.tsx","../src/defaultElements.tsx","../src/RenderText.tsx","../src/RichText.tsx"],"sourcesContent":["import React from 'react';\n\nexport type AudioProps = {\n  url: string;\n};\n\nexport function Audio({ url }: AudioProps) {\n  return (\n    <audio\n      style={{ display: 'block', maxWidth: '100%', height: 'auto' }}\n      src={url}\n      controls\n    >\n      <p>\n        Your browser doesn't support HTML5 audio. Here is a{' '}\n        <a href={url}>link to the audio</a> instead.\n      </p>\n    </audio>\n  );\n}\n","/* eslint-disable jsx-a11y/iframe-has-title */\nimport React from 'react';\nimport escapeHtml from 'escape-html';\nimport { IFrameProps } from '@graphcms/rich-text-types';\n\nexport function IFrame({ url }: Partial<IFrameProps>) {\n  return (\n    <div\n      style={{\n        position: 'relative',\n        overflow: 'hidden',\n        width: '100%',\n        paddingTop: '56.25%',\n      }}\n    >\n      <iframe\n        style={{\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          right: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n        }}\n        src={escapeHtml(url)}\n        loading=\"lazy\"\n        allow=\"fullscreen\"\n        frameBorder=\"0\"\n        referrerPolicy=\"no-referrer\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport escapeHtml from 'escape-html';\nimport { ImageProps } from '@graphcms/rich-text-types';\n\nexport function Image({\n  src,\n  width,\n  height,\n  altText,\n  title,\n}: Partial<ImageProps>) {\n  if (__DEV__ && !src) {\n    console.warn(\n      `[@graphcms/rich-text-react-renderer]: src is required. You need to include a \\`url\\` in your query`\n    );\n  }\n\n  const shouldIncludeWidth = width && width > 0;\n  const shouldIncludeHeight = height && height > 0;\n\n  return (\n    <img\n      loading=\"lazy\"\n      src={escapeHtml(src)}\n      {...(shouldIncludeWidth && { width })}\n      {...(shouldIncludeHeight && { height })}\n      alt={altText}\n      title={title}\n    />\n  );\n}\n","import React from 'react';\nimport escapeHtml from 'escape-html';\nimport { VideoProps } from '@graphcms/rich-text-types';\n\nexport function Video({ src, width, height, title }: Partial<VideoProps>) {\n  return (\n    <video\n      src={escapeHtml(src)}\n      controls\n      width={width || '100%'}\n      height={height || '100%'}\n      title={title}\n    >\n      <p>\n        Your browser doesn't support HTML5 video. Here is a{' '}\n        <a href={src}>link to the video</a> instead.\n      </p>\n    </video>\n  );\n}\n","import React from 'react';\nimport { ClassRendererProps } from '../types';\n\nexport function Class({ className, children }: ClassRendererProps) {\n  return <div className={className}>{children}</div>;\n}\n","import React from 'react';\nimport escapeHtml from 'escape-html';\nimport { LinkElement } from '@graphcms/rich-text-types';\nimport { LinkRendererProps } from '../types';\n\nexport function Link({ children, ...rest }: LinkRendererProps) {\n  const { href, rel, id, title, openInNewTab, className } = rest;\n\n  const props: Pick<LinkElement, 'rel' | 'id' | 'title' | 'className'> & {\n    target?: string;\n  } = {};\n\n  if (rel) props.rel = rel;\n  if (id) props.id = id;\n  if (title) props.title = title;\n  if (className) props.className = className;\n  if (openInNewTab) props.target = '_blank';\n\n  return (\n    <a href={escapeHtml(href)} {...props}>\n      {children}\n    </a>\n  );\n}\n","import React, { Fragment } from 'react';\nimport { RichTextProps } from './types';\n\nimport { IFrame, Image, Video, Class, Link, Audio } from './elements';\n\nfunction FallbackForCustomAsset({ mimeType }: { mimeType: string }) {\n  if (__DEV__) {\n    console.warn(\n      `[@graphcms/rich-text-react-renderer]: Unsupported mimeType encountered: ${mimeType}. You need to write your renderer to render it since we are not opinionated about how this asset should be rendered (check our docs for more info).`\n    );\n  }\n\n  return <Fragment />;\n}\n\nexport const defaultElements: Required<RichTextProps['renderers']> = {\n  a: Link,\n  class: Class,\n  video: Video,\n  img: Image,\n  iframe: IFrame,\n  blockquote: ({ children }) => <blockquote>{children}</blockquote>,\n  ul: ({ children }) => <ul>{children}</ul>,\n  ol: ({ children }) => <ol>{children}</ol>,\n  li: ({ children }) => <li>{children}</li>,\n  p: ({ children }) => <p>{children}</p>,\n  h1: ({ children }) => <h1>{children}</h1>,\n  h2: ({ children }) => <h2>{children}</h2>,\n  h3: ({ children }) => <h3>{children}</h3>,\n  h4: ({ children }) => <h4>{children}</h4>,\n  h5: ({ children }) => <h5>{children}</h5>,\n  h6: ({ children }) => <h6>{children}</h6>,\n  table: ({ children }) => <table>{children}</table>,\n  table_head: ({ children }) => <thead>{children}</thead>,\n  table_body: ({ children }) => <tbody>{children}</tbody>,\n  table_row: ({ children }) => <tr>{children}</tr>,\n  table_cell: ({ children }) => <td>{children}</td>,\n  table_header_cell: ({ children }) => <th>{children}</th>,\n  bold: ({ children }) => <b>{children}</b>,\n  italic: ({ children }) => <i>{children}</i>,\n  underline: ({ children }) => <u>{children}</u>,\n  code: ({ children }) => <code>{children}</code>,\n  code_block: ({ children }) => (\n    <pre\n      style={{\n        whiteSpace: 'pre',\n        wordWrap: 'break-word',\n        overflowX: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        fontFamily: 'monospace',\n      }}\n    >\n      {children}\n    </pre>\n  ),\n  list_item_child: ({ children }) => <>{children}</>,\n  Asset: {\n    audio: props => <Audio {...props} url={props.url} />,\n    image: props => <Image {...props} src={props.url} />,\n    video: props => <Video {...props} src={props.url} />,\n    font: FallbackForCustomAsset,\n    application: FallbackForCustomAsset,\n    model: FallbackForCustomAsset,\n    text: FallbackForCustomAsset,\n  },\n  embed: {},\n  link: {},\n};\n","import React, { ReactNode } from 'react';\nimport { Text } from '@graphcms/rich-text-types';\n\nimport { RichTextProps, NodeRendererType } from './types';\n\nfunction serialize(text: string) {\n  if (text.includes('\\n')) {\n    const splitText = text.split('\\n');\n\n    return splitText.map((line, index) => (\n      <React.Fragment key={index}>\n        {line}\n        {index === splitText.length - 1 ? null : <br />}\n      </React.Fragment>\n    ));\n  }\n\n  return text;\n}\n\nexport function RenderText({\n  textNode,\n  renderers,\n  shouldSerialize,\n}: {\n  textNode: Text;\n  renderers?: RichTextProps['renderers'];\n  shouldSerialize: boolean;\n}) {\n  const { text, bold, italic, underline, code } = textNode;\n\n  let parsedText: ReactNode = shouldSerialize ? serialize(text) : text;\n\n  const Bold: NodeRendererType['bold'] = renderers?.['bold'];\n  const Italic: NodeRendererType['italic'] = renderers?.['italic'];\n  const Underline: NodeRendererType['underline'] = renderers?.['underline'];\n  const Code: NodeRendererType['code'] = renderers?.['code'];\n\n  if (bold && Bold) {\n    parsedText = <Bold>{parsedText}</Bold>;\n  }\n\n  if (italic && Italic) {\n    parsedText = <Italic>{parsedText}</Italic>;\n  }\n\n  if (underline && Underline) {\n    parsedText = <Underline>{parsedText}</Underline>;\n  }\n\n  if (code && Code) {\n    parsedText = <Code>{parsedText}</Code>;\n  }\n\n  return <>{parsedText}</>;\n}\n","import React, { Fragment } from 'react';\nimport {\n  ElementNode,\n  EmptyElementsToRemove,\n  Node,\n  isElement,\n  isText,\n  isEmpty,\n  elementTypeKeys,\n} from '@graphcms/rich-text-types';\n\nimport { defaultElements } from './defaultElements';\nimport { RenderText } from './RenderText';\nimport { RichTextProps } from './types';\n\nfunction getArrayOfElements(content: RichTextProps['content']) {\n  return Array.isArray(content) ? content : content.children;\n}\n\nfunction RenderNode({\n  node,\n  parent,\n  renderers,\n  references,\n}: {\n  node: Node;\n  parent: Node | null;\n  renderers?: RichTextProps['renderers'];\n  references?: RichTextProps['references'];\n}) {\n  if (isText(node)) {\n    let text = node.text;\n\n    const shouldSerialize =\n      parent && isElement(parent) && parent.type !== 'code-block';\n\n    return (\n      <RenderText\n        textNode={{ ...node, text }}\n        renderers={renderers}\n        shouldSerialize={shouldSerialize as boolean}\n      />\n    );\n  }\n\n  if (isElement(node)) {\n    return (\n      <RenderElement\n        element={node}\n        renderers={renderers}\n        references={references}\n      />\n    );\n  }\n\n  const { type } = node as ElementNode;\n\n  if (__DEV__) {\n    console.warn(\n      `[@graphcms/rich-text-react-renderer]: Unknown node type encountered: ${type}`\n    );\n  }\n\n  return <Fragment />;\n}\n\nfunction RenderElement({\n  element,\n  renderers,\n  references,\n}: {\n  element: ElementNode;\n  renderers?: RichTextProps['renderers'];\n  references?: RichTextProps['references'];\n}) {\n  const { children, type, ...rest } = element;\n  const { nodeId, nodeType } = rest;\n\n  // Checks if the element is empty so that it can be removed.\n  if (type in EmptyElementsToRemove && isEmpty({ children })) {\n    return <Fragment />;\n  }\n\n  const isEmbed = nodeId && nodeType;\n\n  /**\n   * The .filter method returns an array with all elements found.\n   * Since there won't be duplicated ID's, it's safe to use the first element.\n   */\n  const referenceValues = isEmbed\n    ? references?.filter(ref => ref.id === nodeId)[0]\n    : null;\n\n  /**\n   * `id` is used to correctly find the props for the reference.\n   * If it's not present, we show an error and render a Fragment.\n   */\n  if (__DEV__ && isEmbed && !referenceValues?.id) {\n    console.error(\n      `[@graphcms/rich-text-react-renderer]: No id found for embed node ${nodeId}. In order to render custom embeds, \\`id\\` is required in your reference query.`\n    );\n\n    return <Fragment />;\n  }\n\n  /**\n   * `mimeType` is used to determine if the node is an image or a video.\n   * That's why this is required and we show an error if it's not present.\n   * Only for custom assets embeds.\n   */\n  if (\n    __DEV__ &&\n    isEmbed &&\n    nodeType === 'Asset' &&\n    !referenceValues?.mimeType\n  ) {\n    console.error(\n      `[@graphcms/rich-text-react-renderer]: No mimeType found for embed node ${nodeId}. In order to render custom assets, \\`mimeType\\` is required in your reference query.`\n    );\n\n    return <Fragment />;\n  }\n\n  /**\n   * `url` is needed to correctly render the image, video, audio or any other asset\n   * Only for custom assets embeds.\n   */\n  if (__DEV__ && isEmbed && nodeType === 'Asset' && !referenceValues?.url) {\n    console.error(\n      `[@graphcms/rich-text-react-renderer]: No url found for embed node ${nodeId}. In order to render custom assets, \\`url\\` is required in your reference query.`\n    );\n\n    return <Fragment />;\n  }\n\n  /**\n   * There's two options if the element is an embed.\n   * 1. If it isn't an asset, then we simply try to use the renderer for that model.\n   *  1.1 If we don't find a renderer, we render a Fragment and show a warning.\n   * 2. If it is an asset, then:\n   *  2.1 If we have a custom renderer for that specific mimeType, we use it.\n   *  2.2 If we don't have, we use the default mimeType group renderer (application, image, video...).\n   */\n  let elementToRender;\n\n  // Option 1\n  if (isEmbed && nodeType !== 'Asset') {\n    const element =\n      type === 'link'\n        ? renderers?.link?.[nodeType as string]\n        : renderers?.embed?.[nodeType as string];\n\n    if (element !== undefined) {\n      elementToRender = element;\n    } else {\n      // Option 1.1\n      console.warn(\n        `[@graphcms/rich-text-react-renderer]: No renderer found for custom ${type} nodeType ${nodeType}.`\n      );\n      return <Fragment />;\n    }\n  }\n\n  // Option 2\n  if (isEmbed && nodeType === 'Asset') {\n    const element = renderers?.Asset?.[referenceValues?.mimeType];\n\n    // Option 2.1\n    if (element !== undefined) {\n      elementToRender = element;\n    } else {\n      // Option 2.2\n      const mimeTypeGroup = referenceValues?.mimeType.split('/')[0];\n      elementToRender = renderers?.Asset?.[mimeTypeGroup];\n    }\n  }\n\n  const elementNodeRenderer = isEmbed\n    ? elementToRender\n    : renderers?.[elementTypeKeys[type] as keyof RichTextProps['renderers']];\n\n  const NodeRenderer = elementNodeRenderer as React.ElementType;\n\n  const props = { ...rest, ...referenceValues };\n\n  if (NodeRenderer) {\n    return (\n      <NodeRenderer {...props}>\n        <RenderElements\n          content={children as ElementNode[]}\n          renderers={renderers}\n          references={references}\n          parent={element}\n        />\n      </NodeRenderer>\n    );\n  }\n\n  return <Fragment />;\n}\n\ntype RenderElementsProps = RichTextProps & {\n  parent?: Node | null;\n};\n\nfunction RenderElements({\n  content,\n  references,\n  renderers,\n  parent,\n}: RenderElementsProps) {\n  const elements = getArrayOfElements(content);\n\n  return (\n    <>\n      {elements.map((node, index) => {\n        return (\n          <RenderNode\n            node={node}\n            parent={parent || null}\n            renderers={renderers}\n            references={references}\n            key={index}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport function RichText({\n  content,\n  renderers: resolvers,\n  references,\n}: RichTextProps) {\n  // Shallow merge doensn't work here because if we spread over the elements, the\n  // Asset object will be completly overriden by the resolvers. We need to keep\n  // the default elements for the Asset that hasn't been writen.\n  const assetRenderers = {\n    ...defaultElements?.Asset,\n    ...resolvers?.Asset,\n  };\n\n  const renderers: RichTextProps['renderers'] = {\n    ...defaultElements,\n    ...resolvers,\n    Asset: assetRenderers,\n  };\n\n  if (__DEV__ && !content) {\n    console.error(`[@graphcms/rich-text-react-renderer]: content is required.`);\n\n    return <Fragment />;\n  }\n\n  if (__DEV__ && !Array.isArray(content) && !content.children) {\n    console.error(\n      `[@graphcms/rich-text-react-renderer]: children is required in content.`\n    );\n\n    return <Fragment />;\n  }\n\n  /*\n    Checks if there's a embed type inside the content and if the `references` prop is defined\n\n    If it isn't defined and there's embed elements, it will show a warning\n    */\n  if (__DEV__) {\n    const elements = getArrayOfElements(content);\n\n    const embedElements = elements.filter(element => element.type === 'embed');\n\n    if (embedElements.length > 0 && !references) {\n      console.warn(\n        `[@graphcms/rich-text-react-renderer]: to render embed elements you need to provide the \\`references\\` prop`\n      );\n    }\n  }\n\n  return (\n    <RenderElements\n      content={content}\n      renderers={renderers}\n      references={references}\n    />\n  );\n}\n"],"names":["Audio","url","React","style","display","maxWidth","height","src","controls","href","IFrame","position","overflow","width","paddingTop","top","bottom","right","left","escapeHtml","loading","allow","frameBorder","referrerPolicy","Image","altText","title","console","warn","shouldIncludeWidth","shouldIncludeHeight","alt","Video","Class","className","children","Link","rest","rel","id","openInNewTab","props","target","FallbackForCustomAsset","mimeType","Fragment","defaultElements","a","video","img","iframe","blockquote","ul","ol","li","p","h1","h2","h3","h4","h5","h6","table","table_head","table_body","table_row","table_cell","table_header_cell","bold","italic","underline","code","code_block","whiteSpace","wordWrap","overflowX","WebkitOverflowScrolling","fontFamily","list_item_child","Asset","audio","image","font","application","model","text","embed","link","serialize","includes","splitText","split","map","line","index","key","length","RenderText","textNode","renderers","shouldSerialize","parsedText","Bold","Italic","Underline","Code","getArrayOfElements","content","Array","isArray","RenderNode","node","parent","references","isText","isElement","type","RenderElement","element","nodeId","nodeType","EmptyElementsToRemove","isEmpty","isEmbed","referenceValues","filter","ref","error","elementToRender","undefined","mimeTypeGroup","elementNodeRenderer","elementTypeKeys","NodeRenderer","RenderElements","elements","RichText","resolvers","assetRenderers","embedElements"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAMgBA;MAAQC,WAAAA;AACtB,SACEC,4BAAA,QAAA;AACEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,OAAX;AAAoBC,MAAAA,QAAQ,EAAE,MAA9B;AAAsCC,MAAAA,MAAM,EAAE;AAA9C;AACPC,IAAAA,GAAG,EAAEN;AACLO,IAAAA,QAAQ;GAHV,EAKEN,4BAAA,IAAA,MAAA,uDAAA,EACsD,GADtD,EAEEA,4BAAA,IAAA;AAAGO,IAAAA,IAAI,EAAER;GAAT,qBAAA,CAFF,aAAA,CALF,CADF;AAYD;;ACnBD;AACA,SAIgBS;MAAST,WAAAA;AACvB,SACEC,4BAAA,MAAA;AACEC,IAAAA,KAAK,EAAE;AACLQ,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,QAAQ,EAAE,QAFL;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,UAAU,EAAE;AAJP;GADT,EAQEZ,4BAAA,SAAA;AACEC,IAAAA,KAAK,EAAE;AACLQ,MAAAA,QAAQ,EAAE,UADL;AAELI,MAAAA,GAAG,EAAE,CAFA;AAGLC,MAAAA,MAAM,EAAE,CAHH;AAILC,MAAAA,KAAK,EAAE,CAJF;AAKLC,MAAAA,IAAI,EAAE,CALD;AAMLL,MAAAA,KAAK,EAAE,MANF;AAOLP,MAAAA,MAAM,EAAE;AAPH;AASPC,IAAAA,GAAG,EAAEY,UAAU,CAAClB,GAAD;AACfmB,IAAAA,OAAO,EAAC;AACRC,IAAAA,KAAK,EAAC;AACNC,IAAAA,WAAW,EAAC;AACZC,IAAAA,cAAc,EAAC;GAdjB,CARF,CADF;AA2BD;;SC7BeC;MACdjB,WAAAA;MACAM,aAAAA;MACAP,cAAAA;MACAmB,eAAAA;MACAC,aAAAA;;AAEA,MAAI,CAAW,CAACnB,GAAhB,EAAqB;AACnBoB,IAAAA,OAAO,CAACC,IAAR;AAGD;;AAED,MAAMC,kBAAkB,GAAGhB,KAAK,IAAIA,KAAK,GAAG,CAA5C;AACA,MAAMiB,mBAAmB,GAAGxB,MAAM,IAAIA,MAAM,GAAG,CAA/C;AAEA,SACEJ,4BAAA,MAAA;AACEkB,IAAAA,OAAO,EAAC;AACRb,IAAAA,GAAG,EAAEY,UAAU,CAACZ,GAAD;KACVsB,kBAAkB,IAAI;AAAEhB,IAAAA,KAAK,EAALA;AAAF,KACtBiB,mBAAmB,IAAI;AAAExB,IAAAA,MAAM,EAANA;AAAF;AAC5ByB,IAAAA,GAAG,EAAEN;AACLC,IAAAA,KAAK,EAAEA;IANT,CADF;AAUD;;SC1BeM;MAAQzB,WAAAA;MAAKM,aAAAA;MAAOP,cAAAA;MAAQoB,aAAAA;AAC1C,SACExB,4BAAA,QAAA;AACEK,IAAAA,GAAG,EAAEY,UAAU,CAACZ,GAAD;AACfC,IAAAA,QAAQ;AACRK,IAAAA,KAAK,EAAEA,KAAK,IAAI;AAChBP,IAAAA,MAAM,EAAEA,MAAM,IAAI;AAClBoB,IAAAA,KAAK,EAAEA;GALT,EAOExB,4BAAA,IAAA,MAAA,uDAAA,EACsD,GADtD,EAEEA,4BAAA,IAAA;AAAGO,IAAAA,IAAI,EAAEF;GAAT,qBAAA,CAFF,aAAA,CAPF,CADF;AAcD;;SChBe0B;MAAQC,iBAAAA;MAAWC,gBAAAA;AACjC,SAAOjC,4BAAA,MAAA;AAAKgC,IAAAA,SAAS,EAAEA;GAAhB,EAA4BC,QAA5B,CAAP;AACD;;SCAeC;MAAOD,gBAAAA;MAAaE;;AAClC,MAAQ5B,IAAR,GAA0D4B,IAA1D,CAAQ5B,IAAR;AAAA,MAAc6B,GAAd,GAA0DD,IAA1D,CAAcC,GAAd;AAAA,MAAmBC,EAAnB,GAA0DF,IAA1D,CAAmBE,EAAnB;AAAA,MAAuBb,KAAvB,GAA0DW,IAA1D,CAAuBX,KAAvB;AAAA,MAA8Bc,YAA9B,GAA0DH,IAA1D,CAA8BG,YAA9B;AAAA,MAA4CN,SAA5C,GAA0DG,IAA1D,CAA4CH,SAA5C;AAEA,MAAMO,KAAK,GAEP,EAFJ;AAIA,MAAIH,GAAJ,EAASG,KAAK,CAACH,GAAN,GAAYA,GAAZ;AACT,MAAIC,EAAJ,EAAQE,KAAK,CAACF,EAAN,GAAWA,EAAX;AACR,MAAIb,KAAJ,EAAWe,KAAK,CAACf,KAAN,GAAcA,KAAd;AACX,MAAIQ,SAAJ,EAAeO,KAAK,CAACP,SAAN,GAAkBA,SAAlB;AACf,MAAIM,YAAJ,EAAkBC,KAAK,CAACC,MAAN,GAAe,QAAf;AAElB,SACExC,4BAAA,IAAA;AAAGO,IAAAA,IAAI,EAAEU,UAAU,CAACV,IAAD;KAAYgC,MAA/B,EACGN,QADH,CADF;AAKD;;AClBD,SAASQ,sBAAT;MAAkCC,gBAAAA;;AAChC,EAAa;AACXjB,IAAAA,OAAO,CAACC,IAAR,8EAC6EgB,QAD7E;AAGD;;AAED,SAAO1C,4BAAA,CAAC2C,cAAD,MAAA,CAAP;AACD;;AAED,AAAO,IAAMC,eAAe,GAAyC;AACnEC,EAAAA,CAAC,EAAEX,IADgE;AAEnE,WAAOH,KAF4D;AAGnEe,EAAAA,KAAK,EAAEhB,KAH4D;AAInEiB,EAAAA,GAAG,EAAEzB,KAJ8D;AAKnE0B,EAAAA,MAAM,EAAExC,MAL2D;AAMnEyC,EAAAA,UAAU,EAAE;AAAA,QAAGhB,QAAH,SAAGA,QAAH;AAAA,WAAkBjC,4BAAA,aAAA,MAAA,EAAaiC,QAAb,CAAlB;AAAA,GANuD;AAOnEiB,EAAAA,EAAE,EAAE;AAAA,QAAGjB,QAAH,SAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GAP+D;AAQnEkB,EAAAA,EAAE,EAAE;AAAA,QAAGlB,QAAH,SAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GAR+D;AASnEmB,EAAAA,EAAE,EAAE;AAAA,QAAGnB,QAAH,SAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GAT+D;AAUnEoB,EAAAA,CAAC,EAAE;AAAA,QAAGpB,QAAH,SAAGA,QAAH;AAAA,WAAkBjC,4BAAA,IAAA,MAAA,EAAIiC,QAAJ,CAAlB;AAAA,GAVgE;AAWnEqB,EAAAA,EAAE,EAAE;AAAA,QAAGrB,QAAH,SAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GAX+D;AAYnEsB,EAAAA,EAAE,EAAE;AAAA,QAAGtB,QAAH,SAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GAZ+D;AAanEuB,EAAAA,EAAE,EAAE;AAAA,QAAGvB,QAAH,SAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GAb+D;AAcnEwB,EAAAA,EAAE,EAAE;AAAA,QAAGxB,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GAd+D;AAenEyB,EAAAA,EAAE,EAAE;AAAA,QAAGzB,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GAf+D;AAgBnE0B,EAAAA,EAAE,EAAE;AAAA,QAAG1B,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GAhB+D;AAiBnE2B,EAAAA,KAAK,EAAE;AAAA,QAAG3B,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,QAAA,MAAA,EAAQiC,QAAR,CAAlB;AAAA,GAjB4D;AAkBnE4B,EAAAA,UAAU,EAAE;AAAA,QAAG5B,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,QAAA,MAAA,EAAQiC,QAAR,CAAlB;AAAA,GAlBuD;AAmBnE6B,EAAAA,UAAU,EAAE;AAAA,QAAG7B,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,QAAA,MAAA,EAAQiC,QAAR,CAAlB;AAAA,GAnBuD;AAoBnE8B,EAAAA,SAAS,EAAE;AAAA,QAAG9B,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GApBwD;AAqBnE+B,EAAAA,UAAU,EAAE;AAAA,QAAG/B,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GArBuD;AAsBnEgC,EAAAA,iBAAiB,EAAE;AAAA,QAAGhC,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,KAAA,MAAA,EAAKiC,QAAL,CAAlB;AAAA,GAtBgD;AAuBnEiC,EAAAA,IAAI,EAAE;AAAA,QAAGjC,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,IAAA,MAAA,EAAIiC,QAAJ,CAAlB;AAAA,GAvB6D;AAwBnEkC,EAAAA,MAAM,EAAE;AAAA,QAAGlC,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,IAAA,MAAA,EAAIiC,QAAJ,CAAlB;AAAA,GAxB2D;AAyBnEmC,EAAAA,SAAS,EAAE;AAAA,QAAGnC,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,IAAA,MAAA,EAAIiC,QAAJ,CAAlB;AAAA,GAzBwD;AA0BnEoC,EAAAA,IAAI,EAAE;AAAA,QAAGpC,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,OAAA,MAAA,EAAOiC,QAAP,CAAlB;AAAA,GA1B6D;AA2BnEqC,EAAAA,UAAU,EAAE;AAAA,QAAGrC,QAAH,UAAGA,QAAH;AAAA,WACVjC,4BAAA,MAAA;AACEC,MAAAA,KAAK,EAAE;AACLsE,QAAAA,UAAU,EAAE,KADP;AAELC,QAAAA,QAAQ,EAAE,YAFL;AAGLC,QAAAA,SAAS,EAAE,MAHN;AAILC,QAAAA,uBAAuB,EAAE,OAJpB;AAKLC,QAAAA,UAAU,EAAE;AALP;KADT,EASG1C,QATH,CADU;AAAA,GA3BuD;AAwCnE2C,EAAAA,eAAe,EAAE;AAAA,QAAG3C,QAAH,UAAGA,QAAH;AAAA,WAAkBjC,4BAAA,wBAAA,MAAA,EAAGiC,QAAH,CAAlB;AAAA,GAxCkD;AAyCnE4C,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,eAAAvC,KAAK;AAAA,aAAIvC,4BAAA,CAACF,KAAD,oBAAWyC;AAAOxC,QAAAA,GAAG,EAAEwC,KAAK,CAACxC;QAA7B,CAAJ;AAAA,KADP;AAELgF,IAAAA,KAAK,EAAE,eAAAxC,KAAK;AAAA,aAAIvC,4BAAA,CAACsB,KAAD,oBAAWiB;AAAOlC,QAAAA,GAAG,EAAEkC,KAAK,CAACxC;QAA7B,CAAJ;AAAA,KAFP;AAGL+C,IAAAA,KAAK,EAAE,eAAAP,KAAK;AAAA,aAAIvC,4BAAA,CAAC8B,KAAD,oBAAWS;AAAOlC,QAAAA,GAAG,EAAEkC,KAAK,CAACxC;QAA7B,CAAJ;AAAA,KAHP;AAILiF,IAAAA,IAAI,EAAEvC,sBAJD;AAKLwC,IAAAA,WAAW,EAAExC,sBALR;AAMLyC,IAAAA,KAAK,EAAEzC,sBANF;AAOL0C,IAAAA,IAAI,EAAE1C;AAPD,GAzC4D;AAkDnE2C,EAAAA,KAAK,EAAE,EAlD4D;AAmDnEC,EAAAA,IAAI,EAAE;AAnD6D,CAA9D;;ACVP,SAASC,SAAT,CAAmBH,IAAnB;AACE,MAAIA,IAAI,CAACI,QAAL,CAAc,IAAd,CAAJ,EAAyB;AACvB,QAAMC,SAAS,GAAGL,IAAI,CAACM,KAAL,CAAW,IAAX,CAAlB;AAEA,WAAOD,SAAS,CAACE,GAAV,CAAc,UAACC,IAAD,EAAOC,KAAP;AAAA,aACnB5F,4BAAA,CAACA,cAAK,CAAC2C,QAAP;AAAgBkD,QAAAA,GAAG,EAAED;OAArB,EACGD,IADH,EAEGC,KAAK,KAAKJ,SAAS,CAACM,MAAV,GAAmB,CAA7B,GAAiC,IAAjC,GAAwC9F,4BAAA,KAAA,MAAA,CAF3C,CADmB;AAAA,KAAd,CAAP;AAMD;;AAED,SAAOmF,IAAP;AACD;;AAED,SAAgBY;MACdC,gBAAAA;MACAC,iBAAAA;MACAC,uBAAAA;AAMA,MAAQf,IAAR,GAAgDa,QAAhD,CAAQb,IAAR;AAAA,MAAcjB,IAAd,GAAgD8B,QAAhD,CAAc9B,IAAd;AAAA,MAAoBC,MAApB,GAAgD6B,QAAhD,CAAoB7B,MAApB;AAAA,MAA4BC,SAA5B,GAAgD4B,QAAhD,CAA4B5B,SAA5B;AAAA,MAAuCC,IAAvC,GAAgD2B,QAAhD,CAAuC3B,IAAvC;AAEA,MAAI8B,UAAU,GAAcD,eAAe,GAAGZ,SAAS,CAACH,IAAD,CAAZ,GAAqBA,IAAhE;AAEA,MAAMiB,IAAI,GAA6BH,SAA7B,oBAA6BA,SAAS,CAAG,MAAH,CAAhD;AACA,MAAMI,MAAM,GAA+BJ,SAA/B,oBAA+BA,SAAS,CAAG,QAAH,CAApD;AACA,MAAMK,SAAS,GAAkCL,SAAlC,oBAAkCA,SAAS,CAAG,WAAH,CAA1D;AACA,MAAMM,IAAI,GAA6BN,SAA7B,oBAA6BA,SAAS,CAAG,MAAH,CAAhD;;AAEA,MAAI/B,IAAI,IAAIkC,IAAZ,EAAkB;AAChBD,IAAAA,UAAU,GAAGnG,4BAAA,CAACoG,IAAD,MAAA,EAAOD,UAAP,CAAb;AACD;;AAED,MAAIhC,MAAM,IAAIkC,MAAd,EAAsB;AACpBF,IAAAA,UAAU,GAAGnG,4BAAA,CAACqG,MAAD,MAAA,EAASF,UAAT,CAAb;AACD;;AAED,MAAI/B,SAAS,IAAIkC,SAAjB,EAA4B;AAC1BH,IAAAA,UAAU,GAAGnG,4BAAA,CAACsG,SAAD,MAAA,EAAYH,UAAZ,CAAb;AACD;;AAED,MAAI9B,IAAI,IAAIkC,IAAZ,EAAkB;AAChBJ,IAAAA,UAAU,GAAGnG,4BAAA,CAACuG,IAAD,MAAA,EAAOJ,UAAP,CAAb;AACD;;AAED,SAAOnG,4BAAA,wBAAA,MAAA,EAAGmG,UAAH,CAAP;AACD;;ACxCD,SAASK,kBAAT,CAA4BC,OAA5B;AACE,SAAOC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAzB,GAAmCA,OAAO,CAACxE,QAAlD;AACD;;AAED,SAAS2E,UAAT;MACEC,YAAAA;MACAC,cAAAA;MACAb,iBAAAA;MACAc,kBAAAA;;AAOA,MAAIC,oBAAM,CAACH,IAAD,CAAV,EAAkB;AAChB,QAAI1B,IAAI,GAAG0B,IAAI,CAAC1B,IAAhB;AAEA,QAAMe,eAAe,GACnBY,MAAM,IAAIG,uBAAS,CAACH,MAAD,CAAnB,IAA+BA,MAAM,CAACI,IAAP,KAAgB,YADjD;AAGA,WACElH,4BAAA,CAAC+F,UAAD;AACEC,MAAAA,QAAQ,eAAOa,IAAP;AAAa1B,QAAAA,IAAI,EAAJA;AAAb;AACRc,MAAAA,SAAS,EAAEA;AACXC,MAAAA,eAAe,EAAEA;KAHnB,CADF;AAOD;;AAED,MAAIe,uBAAS,CAACJ,IAAD,CAAb,EAAqB;AACnB,WACE7G,4BAAA,CAACmH,aAAD;AACEC,MAAAA,OAAO,EAAEP;AACTZ,MAAAA,SAAS,EAAEA;AACXc,MAAAA,UAAU,EAAEA;KAHd,CADF;AAOD;;AAED,MAAQG,IAAR,GAAiBL,IAAjB,CAAQK,IAAR;;AAEA,EAAa;AACXzF,IAAAA,OAAO,CAACC,IAAR,2EAC0EwF,IAD1E;AAGD;;AAED,SAAOlH,4BAAA,CAAC2C,cAAD,MAAA,CAAP;AACD;;AAED,SAASwE,aAAT;MACEC,gBAAAA;MACAnB,kBAAAA;MACAc,mBAAAA;;AAMA,MAAQ9E,QAAR,GAAoCmF,OAApC,CAAQnF,QAAR;AAAA,MAAkBiF,IAAlB,GAAoCE,OAApC,CAAkBF,IAAlB;AAAA,MAA2B/E,IAA3B,iCAAoCiF,OAApC;;AACA,MAAQC,MAAR,GAA6BlF,IAA7B,CAAQkF,MAAR;AAAA,MAAgBC,QAAhB,GAA6BnF,IAA7B,CAAgBmF,QAAhB;;AAGA,MAAIJ,IAAI,IAAIK,mCAAR,IAAiCC,qBAAO,CAAC;AAAEvF,IAAAA,QAAQ,EAARA;AAAF,GAAD,CAA5C,EAA4D;AAC1D,WAAOjC,4BAAA,CAAC2C,cAAD,MAAA,CAAP;AACD;;AAED,MAAM8E,OAAO,GAAGJ,MAAM,IAAIC,QAA1B;AAEA;;;;;AAIA,MAAMI,eAAe,GAAGD,OAAO,GAC3BV,UAD2B,oBAC3BA,UAAU,CAAEY,MAAZ,CAAmB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACvF,EAAJ,KAAWgF,MAAf;AAAA,GAAtB,EAA6C,CAA7C,CAD2B,GAE3B,IAFJ;AAIA;;;;;AAIA,MAAI,CAAWI,OAAX,IAAsB,EAACC,eAAD,YAACA,eAAe,CAAErF,EAAlB,CAA1B,EAAgD;AAC9CZ,IAAAA,OAAO,CAACoG,KAAR,uEACsER,MADtE;AAIA,WAAOrH,4BAAA,CAAC2C,cAAD,MAAA,CAAP;AACD;AAED;;;;;;;AAKA,MACE,CACA8E,OADA,IAEAH,QAAQ,KAAK,OAFb,IAGA,EAACI,eAAD,YAACA,eAAe,CAAEhF,QAAlB,CAJF,EAKE;AACAjB,IAAAA,OAAO,CAACoG,KAAR,6EAC4ER,MAD5E;AAIA,WAAOrH,4BAAA,CAAC2C,cAAD,MAAA,CAAP;AACD;AAED;;;;;;AAIA,MAAI,CAAW8E,OAAX,IAAsBH,QAAQ,KAAK,OAAnC,IAA8C,EAACI,eAAD,YAACA,eAAe,CAAE3H,GAAlB,CAAlD,EAAyE;AACvE0B,IAAAA,OAAO,CAACoG,KAAR,wEACuER,MADvE;AAIA,WAAOrH,4BAAA,CAAC2C,cAAD,MAAA,CAAP;AACD;AAED;;;;;;;;;;AAQA,MAAImF,eAAJ;;AAGA,MAAIL,OAAO,IAAIH,QAAQ,KAAK,OAA5B,EAAqC;AAAA;;AACnC,QAAMF,QAAO,GACXF,IAAI,KAAK,MAAT,GACIjB,SADJ,uCACIA,SAAS,CAAEZ,IADf,qBACI,gBAAkBiC,QAAlB,CADJ,GAEIrB,SAFJ,wCAEIA,SAAS,CAAEb,KAFf,qBAEI,iBAAmBkC,QAAnB,CAHN;;AAKA,QAAIF,QAAO,KAAKW,SAAhB,EAA2B;AACzBD,MAAAA,eAAe,GAAGV,QAAlB;AACD,KAFD,MAEO;AACL;AACA3F,MAAAA,OAAO,CAACC,IAAR,yEACwEwF,IADxE,kBACyFI,QADzF;AAGA,aAAOtH,4BAAA,CAAC2C,cAAD,MAAA,CAAP;AACD;AACF;;;AAGD,MAAI8E,OAAO,IAAIH,QAAQ,KAAK,OAA5B,EAAqC;AAAA;;AACnC,QAAMF,SAAO,GAAGnB,SAAH,wCAAGA,SAAS,CAAEpB,KAAd,qBAAG,iBAAmB6C,eAAnB,oBAAmBA,eAAe,CAAEhF,QAApC,CAAhB,CADmC;;;AAInC,QAAI0E,SAAO,KAAKW,SAAhB,EAA2B;AACzBD,MAAAA,eAAe,GAAGV,SAAlB;AACD,KAFD,MAEO;AAAA;;AACL;AACA,UAAMY,aAAa,GAAGN,eAAH,oBAAGA,eAAe,CAAEhF,QAAjB,CAA0B+C,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAtB;AACAqC,MAAAA,eAAe,GAAG7B,SAAH,yCAAGA,SAAS,CAAEpB,KAAd,qBAAG,kBAAmBmD,aAAnB,CAAlB;AACD;AACF;;AAED,MAAMC,mBAAmB,GAAGR,OAAO,GAC/BK,eAD+B,GAE/B7B,SAF+B,oBAE/BA,SAAS,CAAGiC,6BAAe,CAAChB,IAAD,CAAlB,CAFb;AAIA,MAAMiB,YAAY,GAAGF,mBAArB;;AAEA,MAAM1F,KAAK,gBAAQJ,IAAR,EAAiBuF,eAAjB,CAAX;;AAEA,MAAIS,YAAJ,EAAkB;AAChB,WACEnI,4BAAA,CAACmI,YAAD,oBAAkB5F,MAAlB,EACEvC,4BAAA,CAACoI,cAAD;AACE3B,MAAAA,OAAO,EAAExE;AACTgE,MAAAA,SAAS,EAAEA;AACXc,MAAAA,UAAU,EAAEA;AACZD,MAAAA,MAAM,EAAEM;KAJV,CADF,CADF;AAUD;;AAED,SAAOpH,4BAAA,CAAC2C,cAAD,MAAA,CAAP;AACD;;AAMD,SAASyF,cAAT;MACE3B,gBAAAA;MACAM,mBAAAA;MACAd,kBAAAA;MACAa,eAAAA;AAEA,MAAMuB,QAAQ,GAAG7B,kBAAkB,CAACC,OAAD,CAAnC;AAEA,SACEzG,4BAAA,wBAAA,MAAA,EACGqI,QAAQ,CAAC3C,GAAT,CAAa,UAACmB,IAAD,EAAOjB,KAAP;AACZ,WACE5F,4BAAA,CAAC4G,UAAD;AACEC,MAAAA,IAAI,EAAEA;AACNC,MAAAA,MAAM,EAAEA,MAAM,IAAI;AAClBb,MAAAA,SAAS,EAAEA;AACXc,MAAAA,UAAU,EAAEA;AACZlB,MAAAA,GAAG,EAAED;KALP,CADF;AASD,GAVA,CADH,CADF;AAeD;;AAED,SAAgB0C;MACd7B,gBAAAA;MACW8B,kBAAXtC;MACAc,mBAAAA;;AAEA;AACA;AACA;AACA,MAAMyB,cAAc,gBACf5F,eADe,oBACfA,eAAe,CAAEiC,KADF,EAEf0D,SAFe,oBAEfA,SAAS,CAAE1D,KAFI,CAApB;;AAKA,MAAMoB,SAAS,gBACVrD,eADU,EAEV2F,SAFU;AAGb1D,IAAAA,KAAK,EAAE2D;AAHM,IAAf;;AAMA,MAAI,CAAW,CAAC/B,OAAhB,EAAyB;AACvBhF,IAAAA,OAAO,CAACoG,KAAR;AAEA,WAAO7H,4BAAA,CAAC2C,cAAD,MAAA,CAAP;AACD;;AAED,MAAI,CAAW,CAAC+D,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAZ,IAAsC,CAACA,OAAO,CAACxE,QAAnD,EAA6D;AAC3DR,IAAAA,OAAO,CAACoG,KAAR;AAIA,WAAO7H,4BAAA,CAAC2C,cAAD,MAAA,CAAP;AACD;AAED;;;;;;AAKA,EAAa;AACX,QAAM0F,QAAQ,GAAG7B,kBAAkB,CAACC,OAAD,CAAnC;AAEA,QAAMgC,aAAa,GAAGJ,QAAQ,CAACV,MAAT,CAAgB,UAAAP,OAAO;AAAA,aAAIA,OAAO,CAACF,IAAR,KAAiB,OAArB;AAAA,KAAvB,CAAtB;;AAEA,QAAIuB,aAAa,CAAC3C,MAAd,GAAuB,CAAvB,IAA4B,CAACiB,UAAjC,EAA6C;AAC3CtF,MAAAA,OAAO,CAACC,IAAR;AAGD;AACF;;AAED,SACE1B,4BAAA,CAACoI,cAAD;AACE3B,IAAAA,OAAO,EAAEA;AACTR,IAAAA,SAAS,EAAEA;AACXc,IAAAA,UAAU,EAAEA;GAHd,CADF;AAOD;;;;"}