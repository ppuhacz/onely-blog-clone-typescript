{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveRequestDocument = void 0;\nvar graphql_1 = require(\"graphql\");\n/**\n * helpers\n */\nfunction extractOperationName(document) {\n  var _a;\n  var operationName = undefined;\n  var operationDefinitions = document.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition';\n  });\n  if (operationDefinitions.length === 1) {\n    operationName = (_a = operationDefinitions[0].name) === null || _a === void 0 ? void 0 : _a.value;\n  }\n  return operationName;\n}\nfunction resolveRequestDocument(document) {\n  if (typeof document === 'string') {\n    var operationName_1 = undefined;\n    try {\n      var parsedDocument = (0, graphql_1.parse)(document);\n      operationName_1 = extractOperationName(parsedDocument);\n    } catch (err) {\n      // Failed parsing the document, the operationName will be undefined\n    }\n    return {\n      query: document,\n      operationName: operationName_1\n    };\n  }\n  var operationName = extractOperationName(document);\n  return {\n    query: (0, graphql_1.print)(document),\n    operationName: operationName\n  };\n}\nexports.resolveRequestDocument = resolveRequestDocument;","map":{"version":3,"mappings":";;;;;;AAAA;AAGA;;;AAIA,SAASA,oBAAoB,CAACC,QAAsB;;EAClD,IAAIC,aAAa,GAAGC,SAAS;EAE7B,IAAMC,oBAAoB,GAAGH,QAAQ,CAACI,WAAW,CAACC,MAAM,CACtD,UAACC,UAAU;IAAK,iBAAU,CAACC,IAAI,KAAK,qBAAqB;EAAzC,CAAyC,CAC7B;EAE9B,IAAIJ,oBAAoB,CAACK,MAAM,KAAK,CAAC,EAAE;IACrCP,aAAa,GAAG,0BAAoB,CAAC,CAAC,CAAC,CAACQ,IAAI,0CAAEC,KAAK;;EAGrD,OAAOT,aAAa;AACtB;AAEA,SAAgBU,sBAAsB,CAACX,QAAyB;EAC9D,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,IAAIY,eAAa,GAAGV,SAAS;IAE7B,IAAI;MACF,IAAMW,cAAc,GAAG,mBAAK,EAACb,QAAQ,CAAC;MACtCY,eAAa,GAAGb,oBAAoB,CAACc,cAAc,CAAC;KACrD,CAAC,OAAOC,GAAG,EAAE;MACZ;IAAA;IAGF,OAAO;MAAEC,KAAK,EAAEf,QAAQ;MAAEC,aAAa;IAAA,CAAE;;EAG3C,IAAMA,aAAa,GAAGF,oBAAoB,CAACC,QAAQ,CAAC;EAEpD,OAAO;IAAEe,KAAK,EAAE,mBAAK,EAACf,QAAQ,CAAC;IAAEC,aAAa;EAAA,CAAE;AAClD;AAjBAe","names":["extractOperationName","document","operationName","undefined","operationDefinitions","definitions","filter","definition","kind","length","name","value","resolveRequestDocument","operationName_1","parsedDocument","err","query","exports"],"sources":["C:\\Users\\Komputer 1\\Desktop\\React\\onely-blog-clone\\onely-blog-clone\\node_modules\\graphql-request\\src\\resolveRequestDocument.ts"],"sourcesContent":["import { DocumentNode, OperationDefinitionNode, parse, print } from 'graphql'\nimport { RequestDocument } from './types'\n\n/**\n * helpers\n */\n\nfunction extractOperationName(document: DocumentNode): string | undefined {\n  let operationName = undefined\n\n  const operationDefinitions = document.definitions.filter(\n    (definition) => definition.kind === 'OperationDefinition'\n  ) as OperationDefinitionNode[]\n\n  if (operationDefinitions.length === 1) {\n    operationName = operationDefinitions[0].name?.value\n  }\n\n  return operationName\n}\n\nexport function resolveRequestDocument(document: RequestDocument): { query: string; operationName?: string } {\n  if (typeof document === 'string') {\n    let operationName = undefined\n\n    try {\n      const parsedDocument = parse(document)\n      operationName = extractOperationName(parsedDocument)\n    } catch (err) {\n      // Failed parsing the document, the operationName will be undefined\n    }\n\n    return { query: document, operationName }\n  }\n\n  const operationName = extractOperationName(document)\n\n  return { query: print(document), operationName }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}