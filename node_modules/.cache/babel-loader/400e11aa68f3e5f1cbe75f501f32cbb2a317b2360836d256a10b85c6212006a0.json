{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Komputer 1\\\\Desktop\\\\React\\\\onely-blog-clone\\\\onely-blog-clone\\\\src\\\\components\\\\Post.js\",\n  _s = $RefreshSig$();\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { RichText } from \"@graphcms/rich-text-react-renderer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post(props) {\n  _s();\n  const params = useParams();\n  const id = params.id;\n  if (props.data) {\n    const allPosts = props.data.posts;\n\n    // Looking for a post that matches the id\n    const postFiltered = allPosts.filter(post => post.slug === id);\n    if (postFiltered.length) {\n      // Iterating through all the post data in order to render a post\n      const matchingPostData = [];\n      postFiltered.forEach(post => {\n        matchingPostData.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Bradcrumbs will go here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"post-title\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"post-info\",\n              children: [post.author.name, \" \\u2022 Published: \", post.date, \" \\u2022 Edited: \", post.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.coverImage.url,\n              alt: \"Post cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-content\",\n            children: /*#__PURE__*/_jsxDEV(RichText, {\n              content: post.content.raw\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-author-info\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"See all articles by \", /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: '/author/' + post.author.name.toLowerCase().replace(\" \", \"-\"),\n                  children: post.author.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, post.slug, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this));\n      });\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        children: matchingPostData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"not-found\",\n        children: \"Page not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n  }\n}\n_s(Post, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["NavLink","useParams","RichText","Post","props","params","id","data","allPosts","posts","postFiltered","filter","post","slug","length","matchingPostData","forEach","push","title","author","name","date","coverImage","url","content","raw","toLowerCase","replace"],"sources":["C:/Users/Komputer 1/Desktop/React/onely-blog-clone/onely-blog-clone/src/components/Post.js"],"sourcesContent":["import { NavLink, useParams } from \"react-router-dom\"\r\nimport { RichText } from \"@graphcms/rich-text-react-renderer\";\r\n\r\n\r\nfunction Post(props) {\r\n  const params = useParams();\r\n  const id = params.id;\r\n\r\n  if(props.data) {\r\n    const allPosts = props.data.posts;\r\n\r\n    // Looking for a post that matches the id\r\n    const postFiltered = allPosts.filter(post => post.slug === id)\r\n\r\n    if(postFiltered.length) {\r\n      // Iterating through all the post data in order to render a post\r\n      const matchingPostData = []\r\n      postFiltered.forEach(post => {\r\n        matchingPostData.push(\r\n          <div key={post.slug}>\r\n            <div className=\"post-header\">\r\n              <small>Bradcrumbs will go here</small>\r\n              <h1 className=\"post-title\">{post.title}</h1>\r\n              <p className=\"post-info\">{post.author.name} • Published: {post.date} • Edited: {post.date}</p>\r\n              <img src={post.coverImage.url} alt='Post cover' />\r\n            </div>\r\n            <div className=\"post-content\">\r\n              <RichText content={post.content.raw} />\r\n            </div>\r\n            <div className=\"post-author-info\">\r\n              <span><p>See all articles by <NavLink to={'/author/' + post.author.name.toLowerCase().replace(\" \", \"-\")}>{post.author.name}</NavLink></p></span>\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n      return (\r\n        <main>\r\n          {matchingPostData}\r\n        </main>\r\n\r\n    )\r\n    } else {\r\n      return <div className=\"not-found\">Page not found</div>\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default Post"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,SAAS,QAAQ,kBAAkB;AACrD,SAASC,QAAQ,QAAQ,oCAAoC;AAAC;AAG9D,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EACnB,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1B,MAAMK,EAAE,GAAGD,MAAM,CAACC,EAAE;EAEpB,IAAGF,KAAK,CAACG,IAAI,EAAE;IACb,MAAMC,QAAQ,GAAGJ,KAAK,CAACG,IAAI,CAACE,KAAK;;IAEjC;IACA,MAAMC,YAAY,GAAGF,QAAQ,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKP,EAAE,CAAC;IAE9D,IAAGI,YAAY,CAACI,MAAM,EAAE;MACtB;MACA,MAAMC,gBAAgB,GAAG,EAAE;MAC3BL,YAAY,CAACM,OAAO,CAACJ,IAAI,IAAI;QAC3BG,gBAAgB,CAACE,IAAI,eACnB;UAAA,wBACE;YAAK,SAAS,EAAC,aAAa;YAAA,wBAC1B;cAAA,UAAO;YAAuB;cAAA;cAAA;cAAA;YAAA,QAAQ,eACtC;cAAI,SAAS,EAAC,YAAY;cAAA,UAAEL,IAAI,CAACM;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM,eAC5C;cAAG,SAAS,EAAC,WAAW;cAAA,WAAEN,IAAI,CAACO,MAAM,CAACC,IAAI,EAAC,qBAAc,EAACR,IAAI,CAACS,IAAI,EAAC,kBAAW,EAACT,IAAI,CAACS,IAAI;YAAA;cAAA;cAAA;cAAA;YAAA,QAAK,eAC9F;cAAK,GAAG,EAAET,IAAI,CAACU,UAAU,CAACC,GAAI;cAAC,GAAG,EAAC;YAAY;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QAC9C,eACN;YAAK,SAAS,EAAC,cAAc;YAAA,uBAC3B,QAAC,QAAQ;cAAC,OAAO,EAAEX,IAAI,CAACY,OAAO,CAACC;YAAI;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QACnC,eACN;YAAK,SAAS,EAAC,kBAAkB;YAAA,uBAC/B;cAAA,uBAAM;gBAAA,WAAG,sBAAoB,uBAAC,OAAO;kBAAC,EAAE,EAAE,UAAU,GAAGb,IAAI,CAACO,MAAM,CAACC,IAAI,CAACM,WAAW,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAE;kBAAA,UAAEf,IAAI,CAACO,MAAM,CAACC;gBAAI;kBAAA;kBAAA;kBAAA;gBAAA,QAAW;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAI;cAAA;cAAA;cAAA;YAAA;UAAO;YAAA;YAAA;YAAA;UAAA,QAC5I;QAAA,GAZER,IAAI,CAACC,IAAI;UAAA;UAAA;UAAA;QAAA,QAab,CACP;MACH,CAAC,CAAC;MACF,oBACE;QAAA,UACGE;MAAgB;QAAA;QAAA;QAAA;MAAA,QACZ;IAGX,CAAC,MAAM;MACL,oBAAO;QAAK,SAAS,EAAC,WAAW;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAM;IACxD;EAEF;AACF;AAAC,GA1CQZ,IAAI;EAAA,QACIF,SAAS;AAAA;AAAA,KADjBE,IAAI;AA4Cb,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}